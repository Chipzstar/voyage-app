type BankAccount {
    id          String
    fingerprint String
    country     String
    currency    String
    accountHolderName String
    last4       String
    sortCode    String
    status      String
}

type PaymentMethod {
    id          String
    brand       String
    fingerprint String
    last4       String
    expMonth    Int
    expYear     Int
}

type Stripe {
    accountId String
    paymentMethod PaymentMethod?
    bankAccount BankAccount?
}

type Address {
    addressLine1 String
    addressLine2 String?
    city String
    region String?
    postcode String
    country String
}

type TimeWindow {
    start Int @db.Long
    end Int @db.Long
}

type Dimensions {
    length Int
    width Int
    height Int
}

type ShipmentPickup {
    facilityId String
    facilityName String
    location String
    window TimeWindow
}

type ShipmentDelivery {
    facilityId String
    facilityName String
    location String
    window TimeWindow?
}

type PackageInfo {
	weight Int
	quantity Int
	dimensions Dimensions
	packageType PACKAGE_TYPE
	description String
}

type CarrierInfo {
	name            String
	driverId        String
	driverName      String
	driverPhone     String
	controllerId    String?
	controllerName  String?
	location        Float[]
	vehicleType     String?
}

type LocationTimeWindow {
    h: Int
    m: Int
}

type OperatingProps {
	isActive Boolean
	open LocationTimeWindow
	close LocationTimeWindow
}

type OperatingHoursState {
    facility OperatingProps
}

type Contact {
    name String
    email String
    phone String
    notes String?
}

type LoadLocation {
    fullAddress String
    street      String
    city        String
    region      String?
    postcode    String
    country     String
    note        String?
    location    Geolocation?
    window      TimeWindow?
}

type CustomerInfo {
    id      String
    name    String
    email   String?
    company String
}

type DriverInfo {
    id      String
    name    String
    phone   String
}

type TrackingHistory {
    status STATUS
    timestamp Int
}

enum GEOLOCATION_TYPE {
    Point
}

type Geolocation {
   type: GEOLOCATION_TYPE
   coordinates: Float[]
}

type ChargeRule {
    active  Boolean
    value   Float
}

type RateChargeRules {
    DISTANCE    ChargeRule
    WEIGHT      ChargeRule
    PACKAGE     ChargeRule
}